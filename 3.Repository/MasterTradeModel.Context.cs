//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _3.Repository
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    
    public partial class MasterTradeEntities : DbContext
    {
        public MasterTradeEntities()
            : base("name=MasterTradeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Backtesting> Backtestings { get; set; }
        public virtual DbSet<BacktestingBatch> BacktestingBatches { get; set; }
        public virtual DbSet<BacktestingOperation> BacktestingOperations { get; set; }
        public virtual DbSet<Candle> Candles { get; set; }
        public virtual DbSet<Comparer> Comparers { get; set; }
        public virtual DbSet<CryptoPair> CryptoPairs { get; set; }
        public virtual DbSet<IndicatorMetaDataType> IndicatorMetaDataTypes { get; set; }
        public virtual DbSet<IndicatorType> IndicatorTypes { get; set; }
        public virtual DbSet<Permission> Permissions { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<Strategy> Strategies { get; set; }
        public virtual DbSet<StrategyCondition> StrategyConditions { get; set; }
        public virtual DbSet<Supplier> Suppliers { get; set; }
        public virtual DbSet<Temporality> Temporalities { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<IndicatorConfiguration> IndicatorConfigurations { get; set; }
        public virtual DbSet<ExecutionMoment> ExecutionMoments { get; set; }
        public virtual DbSet<IndicatorMeta> IndicatorMetas { get; set; }
        public virtual DbSet<Indicator> Indicators { get; set; }
    }
}
